// <auto-generated />
using System;
using BookingService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace booking_service.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20251101172705_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingService.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoOwnerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoOwnerId = 1,
                            EndTime = new DateTime(2025, 11, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "Chuyến công tác",
                            StartTime = new DateTime(2025, 11, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Approved",
                            VehicleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CoOwnerId = 2,
                            EndTime = new DateTime(2025, 11, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Note = "Chờ xác nhận",
                            StartTime = new DateTime(2025, 11, 2, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending",
                            VehicleId = 2
                        });
                });

            modelBuilder.Entity("BookingService.Models.CoOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("OwnershipRatio")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("UsageCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CoOwners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ngô Hoàng Thức",
                            OwnershipRatio = 60m,
                            UsageCount = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nguyễn Văn A",
                            OwnershipRatio = 40m,
                            UsageCount = 2
                        });
                });

            modelBuilder.Entity("BookingService.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Xe Mercedes"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Xe VinFast"
                        });
                });

            modelBuilder.Entity("BookingService.Models.Booking", b =>
                {
                    b.HasOne("BookingService.Models.CoOwner", "CoOwner")
                        .WithMany()
                        .HasForeignKey("CoOwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookingService.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoOwner");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
